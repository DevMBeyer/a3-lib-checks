
/*******************************************************************************
	Name:     MB Macro Test Arguments Definitions for Checkings
	File:     MB_lib_testArgsChecks.inc
	Version:  beta
	Date:     2021-05
	Author:   MB

	Description:
		list of test arguments in order to test certain check functions
*******************************************************************************/


////////////////////////////////////////
// Exterior
////////////////////////////////////////

// ---- IMPORT ----

#include <MB_def_testAtoms.inc>
#include <MB_def_charsets.inc>


////////////////////////////////////////
// Variables
////////////////////////////////////////

// ---- CONSTANTS ----

// ---- TYPES

// PRIMITIVE
// Nil
#define TEST_ARG_NIL                    ATOM_VOID
// Booleans
#define TEST_ARG_BOOL_TRUE              ATOM_TRUE
#define TEST_ARG_BOOL_FALSE             ATOM_FALSE
// Scalars
#define TEST_ARG_SCLR_NEG_XS            ATOM_FLOAT_NEG_XS
#define TEST_ARG_SCLR_NEG_XL            ATOM_FLOAT_NEG_XL
#define TEST_ARG_SCLR_POS_XS            ATOM_FLOAT_POS_XS
#define TEST_ARG_SCLR_POS_XL            ATOM_FLOAT_POS_XL
// Strings
#define TEST_ARG_STR_EMPTY              ATOM_STR_EMPTY
#define TEST_ARG_STR_CONTENT            ATOM_STR_CONTENT
// Arrays
#define TEST_ARG_ARR_EMPTY              []
#define TEST_ARG_ARR_CONTENT            [ ATOM_VOID ]
// Codes
#define TEST_ARG_CODE_EMPTY             {}
#define TEST_ARG_CODE_CONTENT           { ATOM_VOID }
#define TEST_ARG_CODE_RETURN            { _this }

// ABSTRACT
// Nulls
#define TEST_ARG_ABSTRACT_CFG_NULL      ATOM_ABSTRACT_CONFIG_NULL
#define TEST_ARG_ABSTRACT_CTRL_NULL     ATOM_ABSTRACT_CONTROL_NULL
#define TEST_ARG_ABSTRACT_DISP_NULL     ATOM_ABSTRACT_DISPLAY_NULL
#define TEST_ARG_ABSTRACT_GRP_NULL      ATOM_ABSTRACT_GROUP_NULL
#define TEST_ARG_ABSTRACT_LOC_NULL      ATOM_ABSTRACT_LOCATION_NULL
#define TEST_ARG_ABSTRACT_OBJ_NULL      ATOM_ABSTRACT_OBJECT_NULL
#define TEST_ARG_ABSTRACT_SCRIPT_NULL   ATOM_ABSTRACT_SCRIPT_NULL
#define TEST_ARG_ABSTRACT_TASK_NULL     ATOM_ABSTRACT_TASK_NULL
// Contents
#define TEST_ARG_ABSTRACT_OBJ_VEHICLE   ATOM_ABSTRACT_OBJECT_VEHICLE
#define TEST_ARG_ABSTRACT_OBJ_SIMPLE    ATOM_ABSTRACT_OBJECT_SIMPLE
#define TEST_ARG_ABSTRACT_OBJ_SUPERSIMPLE ATOM_ABSTRACT_OBJECT_SUPERSIMPLE

// EXTEND
#define TEST_ARG_BIN_OFF                ATOM_UNIT_NULL
#define TEST_ARG_BIN_ON                 ATOM_UNIT_POS
#define TEST_ARG_UNIT_INTERVAL_NEG      ATOM_FLOAT_NEG_XS
#define TEST_ARG_UNIT_INTERVAL_POS      ATOM_FLOAT_POS_XS
#define TEST_ARG_INT_NEG_XS             ATOM_UNIT_NEG
#define TEST_ARG_INT_NEG_XL             ATOM_INTEGER_NEG_XXL
#define TEST_ARG_INT_POS_XS             ATOM_UNIT_NULL
#define TEST_ARG_INT_POS_XL             ATOM_INTEGER_POS_XXL

// COMPLEX
// Vectors
#define TEST_ARG_UNIT_VECTOR_MAX        [ ATOM_UNIT_POS, ATOM_UNIT_POS, ATOM_UNIT_POS ]
#define TEST_ARG_UNIT_VECTOR_MID        [ ATOM_UNIT_NULL, ATOM_UNIT_NULL, ATOM_UNIT_NULL ]
#define TEST_ARG_UNIT_VECTOR_MIN        [ ATOM_UNIT_NEG, ATOM_UNIT_NEG, ATOM_UNIT_NEG ]
#define TEST_ARG_UNIT_VECTOR_MIX        [ ATOM_FLOAT_NEG_XS, ATOM_FLOAT_POS_XS, ATOM_UNIT_NULL ]
#define TEST_ARG_VECTOR_2D              [ ATOM_FLOAT_POS_XL, ATOM_FLOAT_POS_XS ]
#define TEST_ARG_VECTOR_3D              [ ATOM_FLOAT_POS_XL, ATOM_FLOAT_NEG_XS, ATOM_FLOAT_POS_XS ]
// Pairs
#define TEST_ARG_PAIR_NIL               [ ATOM_VOID, ATOM_VOID ]
#define TEST_ARG_PAIR_MIX               [ TEST_ARG_ARR_EMPTY, TEST_ARG_STR_EMPTY ]
#define TEST_ARG_PAIR_STR               [ ATOM_META_FU, ATOM_VOID ]
#define TEST_ARG_PAIR_INDEX             [ ATOM_UNIT_NULL, ATOM_VOID ]
#define TEST_ARG_PAIR_STR_STR           [ ATOM_META_FU, ATOM_STR_CONTENT ]
#define TEST_ARG_PAIR_INDEX_STR         [ ATOM_UNIT_NULL, ATOM_STR_CONTENT ]
#define TEST_ARG_PAIR_STR_SCLR          [ ATOM_META_FU, ATOM_UNIT_NULL ]
#define TEST_ARG_PAIR_INDEX_SCLR        [ ATOM_UNIT_NULL, ATOM_UNIT_NULL ]
#define TEST_ARG_PAIR_STR_ARR           [ ATOM_META_FU, TEST_ARG_ARR_EMPTY ]
#define TEST_ARG_PAIR_INDEX_ARR         [ ATOM_UNIT_NULL, TEST_ARG_ARR_EMPTY ]
// Hasmaps
#define TEST_ARG_HASHMAP_EMPTY          TEST_ARG_ARR_EMPTY
#define TEST_ARG_HASHMAP_NIL            [ TEST_ARG_PAIR_NIL, TEST_ARG_PAIR_NIL, TEST_ARG_PAIR_NIL, TEST_ARG_PAIR_NIL ]
#define TEST_ARG_HASHMAP_MIX            [ TEST_ARG_PAIR_MIX, TEST_ARG_PAIR_MIX, TEST_ARG_PAIR_MIX, TEST_ARG_PAIR_MIX ]
#define TEST_ARG_HASHMAP_STR            [ TEST_ARG_PAIR_STR, TEST_ARG_PAIR_STR, TEST_ARG_PAIR_STR, TEST_ARG_PAIR_STR ]
#define TEST_ARG_HASHMAP_INDEX          [ TEST_ARG_PAIR_INDEX, TEST_ARG_PAIR_INDEX, TEST_ARG_PAIR_INDEX, TEST_ARG_PAIR_INDEX ]
#define TEST_ARG_HASHMAP_STR_SCLR       [ TEST_ARG_PAIR_STR_SCLR, TEST_ARG_PAIR_STR_SCLR, TEST_ARG_PAIR_STR_SCLR, TEST_ARG_PAIR_STR_SCLR ]
#define TEST_ARG_HASHMAP_INDEX_SCLR     [ TEST_ARG_PAIR_INDEX_SCLR, TEST_ARG_PAIR_INDEX_SCLR, TEST_ARG_PAIR_INDEX_SCLR, TEST_ARG_PAIR_INDEX_SCLR ]
#define TEST_ARG_HASHMAP_STR_STR        [ TEST_ARG_PAIR_STR_STR, TEST_ARG_PAIR_STR_STR, TEST_ARG_PAIR_STR_STR, TEST_ARG_PAIR_STR_STR ]
#define TEST_ARG_HASHMAP_INDEX_STR      [ TEST_ARG_PAIR_INDEX_STR, TEST_ARG_PAIR_INDEX_STR, TEST_ARG_PAIR_INDEX_STR, TEST_ARG_PAIR_INDEX_STR ]
#define TEST_ARG_HASHMAP_STR_ARR        [ TEST_ARG_PAIR_STR_ARR, TEST_ARG_PAIR_STR_ARR, TEST_ARG_PAIR_STR_ARR, TEST_ARG_PAIR_STR_ARR ]
#define TEST_ARG_HASHMAP_INDEX_ARR      [ TEST_ARG_PAIR_INDEX_ARR, TEST_ARG_PAIR_INDEX_ARR, TEST_ARG_PAIR_INDEX_ARR, TEST_ARG_PAIR_INDEX_ARR ]
#define TEST_ARG_HASHMAP_STR_ARR        [ TEST_ARG_PAIR_STR_ARR, TEST_ARG_PAIR_STR_ARR, TEST_ARG_PAIR_STR_ARR, TEST_ARG_PAIR_STR_ARR ]
#define TEST_ARG_HASHMAP_INDEX_ARR      [ TEST_ARG_PAIR_INDEX_ARR, TEST_ARG_PAIR_INDEX_ARR, TEST_ARG_PAIR_INDEX_ARR, TEST_ARG_PAIR_INDEX_ARR ]
// Multi Dimensional Hashmaps
#define TEST_ARG_MULTI_HASHMAP_NIL      [ [ ATOM_VOID, [ TEST_ARG_PAIR_NIL ] ], [ ATOM_VOID, [ TEST_ARG_PAIR_NIL ] ], [ ATOM_VOID, [ TEST_ARG_PAIR_NIL ] ], [ ATOM_VOID, [ TEST_ARG_PAIR_NIL ] ] ]
#define TEST_ARG_MULTI_HASHMAP_MIX      [ [ ATOM_META_FU, [ TEST_ARG_PAIR_MIX ] ], [ ATOM_META_BAR, [ TEST_ARG_PAIR_MIX ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_MIX ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_MIX ] ] ]
#define TEST_ARG_MULTI_HASHMAP_STR      [ [ ATOM_META_FU, [ TEST_ARG_PAIR_STR ] ], [ ATOM_META_BAR, [ TEST_ARG_PAIR_STR ] ], [ ATOM_META_QUX, [ TEST_ARG_PAIR_STR ] ], [ ATOM_META_TOK, [ TEST_ARG_PAIR_STR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_INDEX    [ [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX ] ] ]
#define TEST_ARG_MULTI_HASHMAP_STR_SCLR [ [ ATOM_META_FU, [ TEST_ARG_PAIR_STR_SCLR ] ], [ ATOM_META_BAR, [ TEST_ARG_PAIR_STR_SCLR ] ], [ ATOM_META_QUX, [ TEST_ARG_PAIR_STR_SCLR ] ], [ ATOM_META_TOK, [ TEST_ARG_PAIR_STR_SCLR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_INDEX_SCLR [ [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_SCLR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_SCLR ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_SCLR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_SCLR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_STR_STR  [ [ ATOM_META_FU, [ TEST_ARG_PAIR_STR_STR ] ], [ ATOM_META_BAR, [ TEST_ARG_PAIR_STR_STR ] ], [ ATOM_META_QUX, [ TEST_ARG_PAIR_STR_STR ] ], [ ATOM_META_TOK, [ TEST_ARG_PAIR_STR_STR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_INDEX_STR [ [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_STR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_STR ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_STR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_STR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_STR_ARR  [ [ ATOM_META_FU, [ TEST_ARG_PAIR_STR_ARR ] ], [ ATOM_META_BAR, [ TEST_ARG_PAIR_STR_ARR ] ], [ ATOM_META_QUX, [ TEST_ARG_PAIR_STR_ARR ] ], [ ATOM_META_TOK, [ TEST_ARG_PAIR_STR_ARR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_INDEX_ARR [ [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_ARR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_ARR ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_ARR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_ARR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_STR_ARR  [ [ ATOM_META_FU, [ TEST_ARG_PAIR_STR_ARR ] ], [ ATOM_META_BAR, [ TEST_ARG_PAIR_STR_ARR ] ], [ ATOM_META_QUX, [ TEST_ARG_PAIR_STR_ARR ] ], [ ATOM_META_TOK, [ TEST_ARG_PAIR_STR_ARR ] ] ]
#define TEST_ARG_MULTI_HASHMAP_INDEX_ARR [ [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_ARR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_ARR ] ], [ ATOM_UNIT_NULL, [ TEST_ARG_PAIR_INDEX_ARR ] ], [ ATOM_UNIT_POS, [ TEST_ARG_PAIR_INDEX_ARR ] ] ]

// SPECIALS
#define TEST_ARG_RANGE_EMPTY            TEST_ARG_ARR_EMPTY
#define TEST_ARG_RANGE_INFIN            TEST_ARG_ARR_CONTENT
#define TEST_ARG_RANGE_SCLR_NEG_INFIN   [ ATOM_VOID, TEST_ARG_SCLR_NEG_XS ]
#define TEST_ARG_RANGE_SCLR_POS_INFIN   [ TEST_ARG_SCLR_POS_XL, ATOM_VOID ]
#define TEST_ARG_RANGE_SCLR_NEG         [ TEST_ARG_SCLR_NEG_XL, TEST_ARG_SCLR_POS_XS ]
#define TEST_ARG_RANGE_SCLR_POS         [ TEST_ARG_SCLR_POS_XS, TEST_ARG_SCLR_POS_XL ]
#define TEST_ARG_RANGE_SCLR_NEG_POS     [ TEST_ARG_SCLR_NEG_XL, TEST_ARG_SCLR_POS_XL ]
#define TEST_ARG_RANGE_INT_NEG_INFIN    [ ATOM_VOID, TEST_ARG_INT_NEG_XS ]
#define TEST_ARG_RANGE_INT_POS_INFIN    [ TEST_ARG_INT_POS_XL, ATOM_VOID ]
#define TEST_ARG_RANGE_INT_NEG          [ TEST_ARG_INT_NEG_XL, TEST_ARG_INT_POS_XS ]
#define TEST_ARG_RANGE_INT_NULL_POS     [ TEST_ARG_INT_POS_XS, TEST_ARG_INT_POS_XL ]
#define TEST_ARG_RANGE_INT_POS          [ ATOM_UNIT_POS, TEST_ARG_INT_POS_XL ]
#define TEST_ARG_RANGE_INT_NEG_POS      [ TEST_ARG_INT_NEG_XL, TEST_ARG_INT_POS_XL ]


// ---- ARRAY TYPES

// TYPES
// Primitives
#define TEST_ARG_ARR_NIL                [ ATOM_VOID, ATOM_VOID, ATOM_VOID, ATOM_VOID ]
#define TEST_ARG_ARR_BOOL               [ TEST_ARG_BOOL_TRUE, TEST_ARG_BOOL_TRUE, TEST_ARG_BOOL_FALSE, TEST_ARG_BOOL_FALSE ]
#define TEST_ARG_ARR_SCALAR             [ TEST_ARG_SCLR_NEG_XS, TEST_ARG_SCLR_NEG_XL, TEST_ARG_SCLR_POS_XS, TEST_ARG_SCLR_POS_XL ]
#define TEST_ARG_ARR_STRING             [ TEST_ARG_STR_PHRASE, TEST_ARG_STR_CHRS_SPECIALS, TEST_ARG_STR_CHRS_WHITESPACES, TEST_ARG_STR_CHRS_DIGIT ]
#define TEST_ARG_ARR_CODE               [ TEST_ARG_CODE_EMPTY, TEST_ARG_CODE_CONTENT, TEST_ARG_CODE_RETURN, TEST_ARG_CODE_EMPTY ]
#define TEST_ARG_ARR_MULTI_EMPTY        [ TEST_ARG_ARR_EMPTY, TEST_ARG_ARR_EMPTY, TEST_ARG_ARR_EMPTY, TEST_ARG_ARR_EMPTY ]
#define TEST_ARG_ARR_PRIMITIV           [ TEST_ARG_BOOL_FALSE, TEST_ARG_SCLR_NEG_XL, TEST_ARG_STR_CONTENT, TEST_ARG_CODE_RETURN, TEST_ARG_ARR_CONTENT ]
// Abstracts
#define TEST_ARG_ARR_ABSTACT            [ TEST_ARG_ABSTRACT_OBJ_NULL, TEST_ARG_ABSTRACT_OBJ_VEHICLE, TEST_ARG_ABSTRACT_OBJ_SIMPLE, TEST_ARG_ABSTRACT_OBJ_SUPERSIMPLE ]
#define TEST_ARG_ARR_MIX                [ TEST_ARG_NIL, TEST_ARG_BOOL_TRUE, TEST_ARG_SCLR_NEG_XS, TEST_ARG_STR_WORD_MIX, TEST_ARG_ARR_CONTENT, TEST_ARG_CODE_RETURN, TEST_ARG_ABSTRACT_OBJ_VEHICLE ]

// EXTEND
#define TEST_ARG_ARR_BIN                [ ATOM_UNIT_NULL, ATOM_UNIT_NULL, ATOM_UNIT_POS, ATOM_UNIT_POS ]
#define TEST_ARG_ARR_UNIT_INTERVAL      [ TEST_ARG_UNIT_INTERVAL_NEG, TEST_ARG_UNIT_INTERVAL_POS, TEST_ARG_UNIT_INTERVAL_NEG, TEST_ARG_UNIT_INTERVAL_POS ]
#define TEST_ARG_ARR_INT                [ TEST_ARG_INT_NEG_XL, TEST_ARG_INT_NEG_XS, TEST_ARG_INT_POS_XS, TEST_ARG_INT_POS_XS ]
#define TEST_ARG_ARR_INDEX              [ TEST_ARG_INT_POS_XS, TEST_ARG_INT_POS_XL, TEST_ARG_INT_POS_XS, TEST_ARG_INT_POS_XL ]
#define TEST_ARG_ARR_CNT                [ TEST_ARG_INT_POS_XL, TEST_ARG_INT_POS_XL, TEST_ARG_INT_POS_XL, TEST_ARG_INT_POS_XL ]

// COMPLEX
#define TEST_ARG_ARR_UNIT_VECTOR        [ TEST_ARG_UNIT_VECTOR_MAX, TEST_ARG_UNIT_VECTOR_MIN, TEST_ARG_UNIT_VECTOR_MIX, TEST_ARG_UNIT_VECTOR_MIN ]
#define TEST_ARG_ARR_VECTOR_2D          [ TEST_ARG_VECTOR_2D, TEST_ARG_VECTOR_2D, TEST_ARG_VECTOR_2D, TEST_ARG_VECTOR_2D ]
#define TEST_ARG_ARR_VECTOR_3D          [ TEST_ARG_VECTOR_3D, TEST_ARG_VECTOR_3D, TEST_ARG_VECTOR_3D, TEST_ARG_VECTOR_3D ]
#define TEST_ARG_ARR_VECTOR             [ TEST_ARG_VECTOR_2D, TEST_ARG_VECTOR_3D, TEST_ARG_VECTOR_2D, TEST_ARG_VECTOR_3D ]
#define TEST_ARG_ARR_HASHMAP            [ TEST_ARG_HASHMAP_NIL, TEST_ARG_HASHMAP_STR, TEST_ARG_HASHMAP_INDEX, TEST_ARG_HASHMAP_MIX ]
#define TEST_ARG_ARR_MULTI_HASHMAP      [ TEST_ARG_MULTI_HASHMAP_STR, TEST_ARG_MULTI_HASHMAP_INDEX, TEST_ARG_MULTI_HASHMAP_MIX ]

// SPECIALS
#define TEST_ARG_ARR_RANGE_SCLR         [ TEST_ARG_RANGE_SCLR_NEG, TEST_ARG_RANGE_INFIN, TEST_ARG_RANGE_SCLR_POS, TEST_ARG_RANGE_SCLR_NEG_POS, TEST_ARG_RANGE_SCLR_NEG_INFIN, TEST_ARG_RANGE_SCLR_POS_INFIN ]
#define TEST_ARG_ARR_RANGE_INT          [ TEST_ARG_RANGE_INT_NEG, TEST_ARG_RANGE_INT_POS, TEST_ARG_RANGE_INFIN, TEST_ARG_RANGE_INT_NEG_POS, TEST_ARG_RANGE_INT_NEG_INFIN, TEST_ARG_RANGE_INT_POS_INFIN ]
#define TEST_ARG_ARR_RANGE_INDEX        [ TEST_ARG_RANGE_EMPTY, TEST_ARG_RANGE_INT_NULL_POS, TEST_ARG_RANGE_INT_POS_INFIN, TEST_ARG_RANGE_INFIN ]
#define TEST_ARG_ARR_RANGE_CNT          [ TEST_ARG_RANGE_EMPTY, TEST_ARG_RANGE_INT_POS, TEST_ARG_RANGE_INT_POS_INFIN, TEST_ARG_RANGE_INFIN ]

// CONTENTS
// Empty
#define TEST_ARG_ARR_EMPTY_NIL          [ TEST_ARG_NIL ]
#define TEST_ARG_ARR_EMPTY_BOOL         [ TEST_ARG_BOOL_FALSE ]
#define TEST_ARG_ARR_EMPTY_SCLR         [ ATOM_UNIT_NULL ]
#define TEST_ARG_ARR_EMPTY_STR          [ TEST_ARG_STR_EMPTY ]
#define TEST_ARG_ARR_EMPTY_CODE         [ TEST_ARG_CODE_EMPTY ]
#define TEST_ARG_ARR_EMPTY_ARR          [ TEST_ARG_ARR_EMPTY ]
#define TEST_ARG_ARR_EMPTY_OBJ          [ TEST_ARG_ABSTRACT_OBJ_NULL ]
// Content
#define TEST_ARG_ARR_CONTENT_BOOL       [ TEST_ARG_BOOL_TRUE ]
#define TEST_ARG_ARR_CONTENT_SCLR       [ ATOM_UNIT_POS ]
#define TEST_ARG_ARR_CONTENT_STR        [ TEST_ARG_STR_CONTENT ]
#define TEST_ARG_ARR_CONTENT_CODE       [ TEST_ARG_CODE_CONTENT ]
#define TEST_ARG_ARR_CONTENT_ARR        [ TEST_ARG_ARR_CONTENT ]
#define TEST_ARG_ARR_CONTENT_OBJ        [ TEST_ARG_ABSTRACT_OBJ_VEHICLE ]

// --- DATATYPES

#define TEST_ARG_ARR_TYPES_PRIM         [ ATOM_UNIT_NULL, ATOM_STR_EMPTY, TEST_ARG_ARR_EMPTY, TEST_ARG_CODE_EMPTY ]
#define TEST_ARG_ARR_TYPES_ABSTR        [ TEST_ARG_ABSTRACT_CFG_NULL, TEST_ARG_ABSTRACT_GRP_NULL, TEST_ARG_ABSTRACT_LOC_NULL, TEST_ARG_ABSTRACT_OBJ_NULL, TEST_ARG_ABSTRACT_CTRL_NULL, TEST_ARG_ABSTRACT_DISP_NULL, TEST_ARG_ABSTRACT_TASK_NULL, TEST_ARG_ABSTRACT_SCRIPT_NULL ]
#define TEST_ARG_ARR_TYPES_MIX          ( TEST_ARG_ARR_TYPES_PRIM + TEST_ARG_ARR_TYPES_ABSTR )


// ---- TEXTS

#define TEST_ARG_STR_WORD_LOWER         ATOM_WORD_LOWER
#define TEST_ARG_STR_WORD_UPPER         ATOM_WORD_UPPER
#define TEST_ARG_STR_WORD_MIX           ATOM_WORD_MIX
#define TEST_ARG_STR_PHRASE             ATOM_PHRASE
#define TEST_ARG_STR_SENTENCE           ATOM_SENTENCE
#define TEST_ARG_STR_PHARAGRAPH         ATOM_PHARAGRAPH


// ---- FILE SYSTEM

// DIRECTORIES
#define TEST_ARG_DIR_ROOT               ATOM_STR_EMPTY
// ROOT
#define TEST_ARG_DIR_ROOT_CURRENT       ATOM_SEPARATOR_FILE
#define TEST_ARG_DIR_ROOT_SLASH         ATOM_SEPARATOR_DIR
#define TEST_ARG_DIR_ROOT_CUR_SLASH     ( ATOM_SEPARATOR_FILE + ATOM_SEPARATOR_DIR )
// FOLDERS
#define TEST_ARG_DIR_FOLDER_LOWER       ( ATOM_SEPARATOR_DIR + ATOM_FOLDER_LOWER )
#define TEST_ARG_DIR_FOLDER_UPPER       ( ATOM_SEPARATOR_DIR + ATOM_FOLDER_UPPER )
#define TEST_ARG_DIR_FOLDER_MIX         ( ATOM_SEPARATOR_DIR + ATOM_FOLDER_MIX )
#define TEST_ARG_DIR_FOLDER_LOWER_SLASH ( ATOM_FOLDER_LOWER + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_FOLDER_UPPER_SLASH ( ATOM_FOLDER_UPPER + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_FOLDER_MIX_SLASH   ( ATOM_FOLDER_MIX + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_FOLDER_LOWER_SLASHDBL ( ATOM_SEPARATOR_DIR + ATOM_FOLDER_LOWER + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_FOLDER_UPPER_SLASHDBL ( ATOM_SEPARATOR_DIR + ATOM_FOLDER_UPPER + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_FOLDER_MIX_SLASHDBL ( ATOM_SEPARATOR_DIR + ATOM_FOLDER_MIX + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_FOLDER_LOWER_SLASHLESS ATOM_FOLDER_LOWER
#define TEST_ARG_DIR_FOLDER_UPPER_SLASHLESS ATOM_FOLDER_UPPER
#define TEST_ARG_DIR_FOLDER_MIX_SLASHLESS ATOM_FOLDER_MIX
// SUBFOLDERS
#define TEST_ARG_DIR_SUBFOLDER_LOWER    ( TEST_ARG_DIR_FOLDER_LOWER_SLASHDBL + ATOM_SUBFOLDER_LOWER )
#define TEST_ARG_DIR_SUBFOLDER_UPPER    ( TEST_ARG_DIR_FOLDER_UPPER_SLASHDBL + ATOM_SUBFOLDER_UPPER )
#define TEST_ARG_DIR_SUBFOLDER_MIX      ( TEST_ARG_DIR_FOLDER_MIX_SLASHDBL + ATOM_SUBFOLDER_MIX )
#define TEST_ARG_DIR_SUBFOLDER_LOWER_SLASH ( TEST_ARG_DIR_FOLDER_LOWER_SLASH + ATOM_SUBFOLDER_LOWER )
#define TEST_ARG_DIR_SUBFOLDER_UPPER_SLASH ( TEST_ARG_DIR_FOLDER_UPPER_SLASH + ATOM_SUBFOLDER_UPPER )
#define TEST_ARG_DIR_SUBFOLDER_MIX_SLASH ( TEST_ARG_DIR_FOLDER_MIX_SLASH + ATOM_SUBFOLDER_MIX )
#define TEST_ARG_DIR_SUBFOLDER_LOWER_SLASHDBL ( TEST_ARG_DIR_FOLDER_LOWER_SLASHDBL + ATOM_SUBFOLDER_LOWER + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_SUBFOLDER_UPPER_SLASHDBL ( TEST_ARG_DIR_FOLDER_UPPER_SLASHDBL + ATOM_SUBFOLDER_UPPER + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_SUBFOLDER_MIX_SLASHDBL ( TEST_ARG_DIR_FOLDER_MIX_SLASHDBL + ATOM_SUBFOLDER_MIX + ATOM_SEPARATOR_DIR )
#define TEST_ARG_DIR_SUBFOLDER_LOWER_SLASHLESS ( TEST_ARG_DIR_FOLDER_LOWER_SLASH + ATOM_SUBFOLDER_LOWER )
#define TEST_ARG_DIR_SUBFOLDER_UPPER_SLASHLESS ( TEST_ARG_DIR_FOLDER_UPPER_SLASH + ATOM_SUBFOLDER_UPPER )
#define TEST_ARG_DIR_SUBFOLDER_MIX_SLASHLESS ( TEST_ARG_DIR_FOLDER_MIX_SLASH + ATOM_SUBFOLDER_MIX )

// FILES
#define TEST_ARG_FILE_LOWER             ( ATOM_FILENAME_LOWER + ATOM_SEPARATOR_FILE + ATOM_SUFFIX_LOWER )
#define TEST_ARG_FILE_UPPER             ( ATOM_FILENAME_UPPER + ATOM_SEPARATOR_FILE + ATOM_SUFFIX_UPPER )
#define TEST_ARG_FILE_MIX               ( ATOM_FILENAME_MIX + ATOM_SEPARATOR_FILE + ATOM_SUFFIX_MIX )

// PATHS
#define TEST_ARG_PATH_ROOT_LOWER        ( ATOM_SEPARATOR_DIR + TEST_ARG_FILE_LOWER )
#define TEST_ARG_PATH_ROOT_UPPER        ( ATOM_SEPARATOR_DIR + TEST_ARG_FILE_UPPER )
#define TEST_ARG_PATH_ROOT_MIX          ( ATOM_SEPARATOR_DIR + TEST_ARG_FILE_MIX )
#define TEST_ARG_PATH_FOLDER_LOWER      ( TEST_ARG_DIR_FOLDER_LOWER_SLASHDBL + TEST_ARG_FILE_LOWER )
#define TEST_ARG_PATH_FOLDER_UPPER      ( TEST_ARG_DIR_FOLDER_UPPER_SLASHDBL + TEST_ARG_FILE_UPPER )
#define TEST_ARG_PATH_FOLDER_MIX        ( TEST_ARG_DIR_FOLDER_MIX_SLASHDBL + TEST_ARG_FILE_MIX )
#define TEST_ARG_PATH_FOLDER_LOWER_SLASHLESS ( TEST_ARG_DIR_FOLDER_LOWER_SLASH + TEST_ARG_FILE_LOWER )
#define TEST_ARG_PATH_FOLDER_UPPER_SLASHLESS ( TEST_ARG_DIR_FOLDER_UPPER_SLASH + TEST_ARG_FILE_UPPER )
#define TEST_ARG_PATH_FOLDER_MIX_SLASHLESS ( TEST_ARG_DIR_FOLDER_MIX_SLASH + TEST_ARG_FILE_MIX )
#define TEST_ARG_PATH_SUBFOLDER_LOWER   ( TEST_ARG_DIR_SUBFOLDER_LOWER_SLASHDBL + TEST_ARG_FILE_LOWER )
#define TEST_ARG_PATH_SUBFOLDER_UPPER   ( TEST_ARG_DIR_SUBFOLDER_UPPER_SLASHDBL + TEST_ARG_FILE_UPPER )
#define TEST_ARG_PATH_SUBFOLDER_MIX     ( TEST_ARG_DIR_SUBFOLDER_MIX_SLASHDBL + TEST_ARG_FILE_MIX )
#define TEST_ARG_PATH_SUBFOLDER_LOWER_SLASHLESS ( TEST_ARG_DIR_SUBFOLDER_LOWER_SLASH + TEST_ARG_FILE_LOWER )
#define TEST_ARG_PATH_SUBFOLDER_UPPER_SLASHLESS ( TEST_ARG_DIR_SUBFOLDER_UPPER_SLASH + TEST_ARG_FILE_UPPER )
#define TEST_ARG_PATH_SUBFOLDER_MIX_SLASHLESS ( TEST_ARG_DIR_SUBFOLDER_MIX_SLASH + TEST_ARG_FILE_MIX )


// ---- CHARACTERS

// STRINGS
#define TEST_ARG_STR_CHRS_SPECIALS      CHRS_SPECIALS
#define TEST_ARG_STR_CHRS_DIGIT         CHRS_DIGIT
#define TEST_ARG_STR_CHRS_WORD_UPPER    CHRS_WORD_UPPER
#define TEST_ARG_STR_CHRS_WORD_LOWER    CHRS_WORD_LOWER
#define TEST_ARG_STR_CHRS_WORD          CHRS_WORD
#define TEST_ARG_STR_CHRS_WORD_DIGIT    CHRS_WORD_DIGIT
#define TEST_ARG_STR_CHRS_WHITESPACES   CHRS_WHITESPACES
#define TEST_ARG_STR_CHRS_PRINTABLE     CHRS_PRINTABLE

// ARRAYS
#define TEST_ARG_ARR_CHRS_SPECIALS      CHRS_ARR_SPECIALS
#define TEST_ARG_ARR_CHRS_DIGIT         CHRS_ARR_DIGIT
#define TEST_ARG_ARR_CHRS_WORD_LOWER    CHRS_ARR_WORD_LOWER
#define TEST_ARG_ARR_CHRS_WORD_UPPER    CHRS_ARR_WORD_UPPER
#define TEST_ARG_ARR_CHRS_WORD          CHRS_ARR_WORD
#define TEST_ARG_ARR_CHRS_WORD_DIGIT    CHRS_ARR_WORD_DIGIT
#define TEST_ARG_ARR_CHRS_WHITESPACES   CHRS_ARR_WHITESPACES
#define TEST_ARG_ARR_CHRS_TEXT          CHRS_ARR_TEXT
#define TEST_ARG_ARR_CHRS_PRINTABLE     CHRS_ARR_PRINTABLE
